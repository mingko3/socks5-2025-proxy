<!DOCTYPE html>
<html lang="zh">
<head>
    <meta charset="UTF-8">
    <title>多协议代理订阅中心</title>
    <style>
        body { font-family: Arial, sans-serif; background: #f4f4f4; margin: 0; padding: 0; }
        .container { max-width: 900px; margin: auto; padding: 20px; }
        h1 { text-align: center; }
        .update-time { text-align: center; color: gray; margin-bottom: 20px; }
        .card { background: white; padding: 20px; margin-bottom: 20px; border-radius: 8px; text-align: center; box-shadow: 0 2px 6px rgba(0,0,0,0.1); }
        .card img { max-width: 200px; }
        a { text-decoration: none; color: #007BFF; }
        a:hover { text-decoration: underline; }
        .count { color: #555; margin-top: 8px; }
    </style>
</head>
<body>
<div class="container">
    <h1>订阅中心</h1>
    <div class="update-time">
        最后更新时间：
        <span id="update-time">加载中...</span>
    </div>

    <div id="subscriptions"></div>
</div>

<script>
    const subs = [
        { name: "主订阅 (Clash YAML)", file: "proxy.yaml", qr: "main.png" },
        { name: "Base64 订阅", file: "sub", qr: "sub.png" },
        { name: "SS 节点订阅", file: "SS.yaml", qr: "ss.png" },
        { name: "VMess 节点订阅", file: "VMESS.yaml", qr: "vmess.png" },
        { name: "VLESS 节点订阅", file: "VLESS.yaml", qr: "vless.png" },
        { name: "Trojan 节点订阅", file: "TROJAN.yaml", qr: "trojan.png" },
        { name: "SOCKS4 节点订阅", file: "SOCKS4.yaml", qr: "socks4.png" },
        { name: "SOCKS5 节点订阅", file: "SOCKS5.yaml", qr: "socks5.png" }
    ];

    function renderSubscriptions() {
        const container = document.getElementById("subscriptions");
        subs.forEach(sub => {
            fetch(sub.file)
                .then(r => r.text())
                .then(data => {
                    let count = 0;
                    if (sub.file.endsWith(".yaml")) {
                        count = (data.match(/name:/g) || []).length;
                    } else {
                        try {
                            count = atob(data).split("\n").filter(l => l.trim()).length;
                        } catch (e) {
                            count = data.split("\n").filter(l => l.trim()).length;
                        }
                    }
                    const div = document.createElement("div");
                    div.className = "card";
                    div.innerHTML = `
                        <h3>${sub.name}</h3>
                        <a href="${sub.file}" target="_blank">https://mingko3.github.io/socks5-2025-proxy/${sub.file}</a>
                        <div><img src="qrs/${sub.qr}" alt="${sub.name} QR"></div>
                        <div class="count">节点数量：${count}</div>
                    `;
                    container.appendChild(div);
                })
                .catch(() => {});
        });
    }

    function loadUpdateTime() {
        fetch("update_time.txt")
            .then(r => r.text())
            .then(t => document.getElementById("update-time").textContent = t)
            .catch(() => document.getElementById("update-time").textContent = "未知");
    }

    renderSubscriptions();
    loadUpdateTime();
</script>
</body>
</html>
